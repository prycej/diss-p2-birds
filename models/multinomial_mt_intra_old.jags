model {
  # Priors and constraints
  for (t in 1:(n.occasions-1)){
    phi[t] ~ dunif(0, 1) # Prior for mean juv. survival
    p[t] ~  dunif(0, 1) # Prior for mean recapture
  }

  # Define the multinomial likelihood
  for (t in 1:(n.occasions-1)){
    marr[t,] ~ dmulti(pr[t,], R[t])
  }
  # Define the cell probabilities of the m-arrays
  # Main diagonal
  for (t in 1:(n.occasions-1)){
    q[t] <- 1-p[t] # Probability of non-recapture
    pr[t,t] <- phi[t]*p[t]
    # Above main diagonal
    for (j in (t+1):(n.occasions-1)){
      pr[t,j] <- prod(phi[t:j])*prod(q[t:(j-1)])*p[j]
    } #j
    # Below main diagonal
    for (j in 1:(t-1)){
      pr[t,j] <- 0
    } #j
  } #t
  # Last column: probability of non-recapture
  for (t in 1:(n.occasions-1)){
    pr[t,n.occasions] <- 1-sum(pr[t,1:(n.occasions-1)])
  } #t
  # Compute fit statistics for observed data
  for (t in 1:(n.occasions-1)){
    for (j in 1:n.occasions){

      expmarr[t,j] <- R[t]*pr[t,j]
      E.org[t,j] <- pow((pow(marr[t,j], 0.5)-pow(expmarr[t,j], 0.5)), 2)
    }
  }
    # Generate replicate data and compute fit stats from them
  for (t in 1:(n.occasions-1)){
    marr.new[t,1:n.occasions] ~ dmulti(pr[t,], R[t])

    for (j in 1:n.occasions){
      E.new[t,j] <- pow((pow(marr.new[t,j], 0.5)-pow(expmarr[t,j], 0.5)), 2)
   }
  }

    fit <- sum(E.org[,])
    fit.new <- sum(E.new[,])
}

